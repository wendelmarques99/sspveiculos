z <- nunumeric(101)
z
z <-numeric(101)
z
CursoR::atualizar_material()
install.packages("CursoR")
file.copy("~/Documents/Faxina de dados- Curso R/Curso faxina de dados/Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", "data-raw")
file.copy("~/Documents/Faxina de dados- Curso R/Curso faxina de dados/Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", .)
file.copy("~/Documents/Faxina de dados- Curso R/Curso faxina de dados/Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", ".")
file.copy("~/Documents/Faxina de dados - Curso R/Curso faxina de dados/Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", ".")
file.copy("~/Documents/Faxina de dados - curso R/Curso faxina de dados/Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", ".")
file.copy("C:\Users\werico\Documents\Faxina de dados - curso R\Curso faxina de dados\Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", ".")
file.copy("C:\\Users\\werico\\Documents\\Faxina de dados - curso R\\Curso faxina de dados\\Dados\\DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xlsx", ".")
file.copy("C:\\Users\\werico\\Documents\\Faxina de dados - curso R\\Curso faxina de dados\\Dados\\DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls", ".")
file.copy("C:\\Users\\werico\\Documents\\Faxina de dados - curso R\\Curso faxina de dados\\Dados\\arrumando_dados_ssp_1.R", ".")
file.copy("C:\\Users\\werico\\Documents\\Faxina de dados - curso R\\Curso faxina de dados\\Arrumando_dados_ssp_1.R", ".")
library(tidyverse)
library(readxl)
base_bruta <- readxl::read_excel("dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls")
base_bruta <- read.delim("dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("Dados/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
getwd()
base_bruta <- read.delim("DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("~/data-raw/DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("~//data-raw//DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("~\\data-raw\\DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta <- read.delim("data-raw\\DadosBO_2021_3(ROUBO DE VEÍCULOS))_completa.xls",
fileEncoding = "UTF-16LE", sep = "\t",
header = T, stringsAsFactors = F) %>%
tibble::as_tibble()
base_bruta %>%
tibble::view()
base_bruta %>%
dplyr::glimpse()
base_bruta %>%
dplyr::count(ANO_BO, NUM_BO, DELEGACIA_CIRCUNSCRICAO, DELEGACIA_NOME)
base_bruta %>%
dplyr::count(ANO_BO, NUM_BO, DELEGACIA_CIRCUNSCRICAO, DELEGACIA_NOME, PLACA_VEICULO)
base_bruta %>%
dplyr::filter(NUM_BO == 12, ANO_BO == 2021, PLACA_VEICULO == "FIG6050") %>%
tibble::view()
base_nomes_arrumados_preenchida <- base_bruta %>%
# ela passa todos os nomes para minusculo, mas também:
# - tira espacos e troca por "_"
# - tira acento
# - tira simbilos tipo º ª
# - se tiver repeticao nas colunas, ele coluca um numeral na frente.
# - duas colunas X viram X1 e X2
janitor::clean_names() %>%
dplyr::filter(!is.na(placa_veiculo), placa_veiculo != "",
!(placa_veiculo %in% c("0000000", "SEMPLAC", "TAMPADA",
"000000", "SEMPLA")))
# vamos verificar se PARECE correto
base_nomes_arrumados_preenchida %>%
dplyr::count(placa_veiculo) %>%
tibble::view()
base_nomes_arrumados_preenchida %>%
tibble::view("Base completa")
ocorrencias <- base_nomes_arrumados_preenchida %>%
dplyr::select(ano_bo:delegacia_circunscricao) %>%
dplyr::distinct()
carros <- base_nomes_arrumados_preenchida %>%
dplyr::select(
num_bo, ano_bo, delegacia_nome,
# precisamos as colunas de chave
placa_veiculo:ano_fabricacao) %>%
dplyr::distinct(placa_veiculo, .keep_all = TRUE)
crimes_passo1 <- base_nomes_arrumados_preenchida %>%
dplyr::select(
num_bo, ano_bo, delegacia_nome,
# precisamos as colunas de chave
especie, rubrica, desdobramento
) %>%
dplyr::distinct() %>%
tidyr::unite(crime_completo, especie, rubrica, desdobramento, sep = " @@@ ")
tibble::view(crimes_passo1)
crimes_passo2a <- crimes_passo1 %>%
dplyr::group_by(num_bo, ano_bo, delegacia_nome) %>%
dplyr::summarise(
todos_os_crimes = stringr::str_c(crime_completo, collapse = "\n")
)
crimes_passo2b <- crimes_passo1 %>%
dplyr::group_by(num_bo, ano_bo, delegacia_nome) %>%
dplyr::mutate(
nomes_das_colunas_largas = stringr::str_c("crime_", 1:n())
) %>%
tidyr::pivot_wider(names_from = nomes_das_colunas_largas, values_from = crime_completo)
crimes_passo2c <- crimes_passo1 %>%
dplyr::group_by(num_bo, ano_bo, delegacia_nome) %>%
tidyr::nest()
base_final_tidy <- carros %>%
dplyr::left_join(ocorrencias, by = c("num_bo", "ano_bo", "delegacia_nome")) %>%
dplyr::left_join(crimes_passo2a, by = c("num_bo", "ano_bo", "delegacia_nome"))
tibble::view(base_final_tidy)
dados_roubo_veiculos_ssp_2020_2021 <- base_final_tidy
usethis::use_data(dados_roubo_veiculos_ssp_2020_2021, overwrite = TRUE)
usethis::use_package("tidyverse", type = "Suggests")
usethis::use_package("readxl", type = "Suggests")
devtools::install()
?dados_roubo_veiculos_ssp_2020_2021
devtools::document()
?dados_roubo_veiculos_ssp_2020_2021
devtools::document()
?dados_roubo_veiculos_ssp_2020_2021
devtools::document()
?dados_roubo_veiculos_ssp_2020_2021
?dados_roubo_veiculos_ssp_2020_2021
devtools::document()
?dados_roubo_veiculos_ssp_2020_2021
quit()
devtools::install_local(~/Documents/sspveiculos)
devtools::install_local("~\\Documents\\sspveiculos")
devtools::install_local("~\Documents\sspveiculos")
devtools::install_local("~/Documents/sspveiculos")
devtools::install_local("C:\\Users\werico\\Documents\\sspveiculos")
devtools::install_local("C:\\Users\werico\\Documents\\sspveiculos/")
devtools::install_local("C:\\Users\werico\\Documents\\sspveiculos")
devtools::install_local("C:/Users/werico/Documents/sspveiculos")
devtools::install_local("C:/Users/werico/Documents/sspveiculos", force = TRUE)
library(sspveiculos)
library(sspveiculos)
sspveiculos::dados_roubo_veiculos_ssp_2020_2021
file.exists("~/.ssh/id_rsa.pub")
